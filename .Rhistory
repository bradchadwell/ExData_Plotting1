x
sum(temp["X",]*temp["Prob",])
(.75)*(.3)/(.75*.3+(1-.52)*(1-.3))
pnorm(70,80,10)
qnorm(95,1100,75)
qnorm(.95,1100,75)
qnorm(.95,1100,75^2/100)
qnorm(.95,1100,(75^2/100)^.5)
choose(5,4)
choose(5,5)
7/32
6/32
ppois(14,16)
ppois(14,15)
ppois(16,15)
p14<-ppois(14,15)
p16<-ppois(16,15)
p16-p14
pnorm(-1,1,1)
pnorm(14,15,1)
.5-pnorm(14,15,1)
1-2*pnorm(14,15,1)
ppois(10,5*3)
n<-9
mu<-1100
sd<-30
1100 + c(-1, 1) * qt(.975, n - 1) * 30 / sqrt(n)
qt(.975, n - 1)
30/sqrt(8)
30/sqrt(8)*2
qt(.975, n - 1)*2
qt(.975, n - 1)*2
qt(.975, n - 1)*30/sqrt(n)
1100-23.06
qt(.975,8)
ci<-qt(.975,8)
ci
3/4/ci
2*3/4/ci
ci
6/ci
nx<-10
ny<-10
mx<-3
my<-5
sdx<-.6
sdy<-.68
varx<-.6
vary<-.68
varmd<-((nx-1)*varx+(ny-1)*vary)/(nx+ny-2)
varmd
sdmd<-sqrt(varmd)
ci<-mx-my+c(-1,1)*qt(.975,(nx+ny-2))*sdmd*(1/nx+1/ny)^.5
ci
qt(.975,10)
qt(.95,10)
nx<-100
ny<-100
my<-4
mx<-6
sdy<-.5
sdx<-2
df <- (sdx^2/nx + sdy^2/nx) ^ 2 /
((sdx^2/nx)^2 / (nx - 1) + (sdy^2/ny)^2 / (ny - 1))
df
tdf<-qt(.975,df)
tdf
my-mx+c(-1,1)*tdf*((sdx^2/nx + sdy^2/nx)^.5)
mx-my+c(-1,1)*tdf*((sdx^2/nx + sdy^2/nx)^.5)
nx<-9
ny<-9
mx<--3
my<-1
sdx<-1.5
sdy<-1.8
sp <- sqrt( ((nx - 1) * sdx^2 + (ny-1) * sdy^2) / (nx + ny-2))
sp
semd <- sp * sqrt(1 / nx + 1/ny)
mx-my+c(-1,1)*qt(.95, nx + ny - 2) * semd
library(xlsx)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx(file="./data/NGAP.xlsx",sheetIndex=1,colIndex=colIndx,rowIndex=rowIndex, header=TRUE)
setwd("~/Coursera/getdata/quiz1")
dat <- read.xlsx(file="./data/NGAP.xlsx",sheetIndex=1,colIndex=colIndx,rowIndex=rowIndex, header=TRUE)
dat <- read.xlsx(file="./data/NGAP.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex, header=TRUE)
head(dat)
str(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl, destfile = "./data/restaurant.xlsx", method = "curl")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl, destfile = "./data/restaurant.xlsx", method = "curl")
download.file(fileURL, destfile = "./data/restaurant.xlsx", method = "curl")
library(XML)
install.packages("xml")
install.packages("XML")
library(XML)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(file=fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(file=fileURL,useInternal=TRUE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(file=fileURL,useInternal=TRUE)
doc
fileURL
fileURL<-"http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(file=fileURL,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xpathSApply(rootNode,"//zipcode")
zip <- xpathSApply(rootNode,"//zipcode", xmlValue)
length(zip)
sum(xpathSApply(rootNode, "//zipcode", xmlValue) == "21231")
xpathSApply(rootNode, "//zipcode", xmlValue) == "21231")
xpathSApply(rootNode, "//zipcode", xmlValue) == "21231"
sum(zip[zip==21231])
sum(zip[zip=="21231"])
sum(zip[zip=="21231"])
zip[zip=="21231"]
length(zip[zip=="21231"])
length(zip[zip=="21231"])length(zip[zip=="21231"])
library(data.table)
install.packages("data.table")
library(data.table)
DT<- fread(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv)
DT<- fread(http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "./data/06pid.csv", method = "curl")
DT<-fread("./data/06pid.csv")
DT
system.time(expr1)
expr1<- "mean(DT$pwgtp15,by=DT$SEX)"
system.time(expr1)
system.time(mean(DT$pwgtp15,by=DT$SEX))
DT$pwgtp15
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(expr1)
expr1<- "mean(DT$pwgtp15,by=DT$SEX)"
expr2<- "rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]"
expr3<- "DT[,mean(pwgtp15),by=SEX]"
expr4<-"mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)"
expr5<-"sapply(split(DT$pwgtp15,DT$SEX),mean)"
expr6<-"tapply(DT$pwgtp15,DT$SEX,mean)"
system.time(expr2)
system.time(expr3)
replicate(1000,expr1)
system.time(expr4)
eval(expr1)
evalq(expr1)
n<-1000
for(i in 1:4) expr1
for(i in 1:4) mean(DT$pwgtp15,by=DT$SEX)
system.time(replicate(1000,expr1))
system.time(replicate(1000,mean(DT$pwgtp15,by=DT$SEX)))
eval(expr1)
exprtest<-expression(expr1)
exprtest
exprtest<-expression(mean(DT$pwgtp15,by=DT$SEX))
exprtest
eval(exprtest)
xpr1<- expression(mean(DT$pwgtp15,by=DT$SEX))
expr2<- expression(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
expr3<- expression(DT[,mean(pwgtp15),by=SEX])
expr4<-expression(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
expr5<-expression(sapply(split(DT$pwgtp15,DT$SEX),mean))
expr6<-expression(tapply(DT$pwgtp15,DT$SEX,mean))
expr1<- expression(mean(DT$pwgtp15,by=DT$SEX))
expr2<- c(expression(rowMeans(DT)[DT$SEX==1]), expression(rowMeans(DT)[DT$SEX==2]))
expr3<- expression(DT[,mean(pwgtp15),by=SEX])
expr4<-expression(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
expr5<-expression(sapply(split(DT$pwgtp15,DT$SEX),mean))
expr6<-expression(tapply(DT$pwgtp15,DT$SEX,mean))
expr4<-c(expression(mean(DT[DT$SEX==1,]$pwgtp15)),expression(mean(DT[DT$SEX==2,]$pwgtp15)))
system.time(replicate(1000,mean(DT$pwgtp15,by=DT$SEX)))
system.time(replicate(1000,eval(expr1))
system.time(replicate(1000,eval(expr1)))
system.time(replicate(1000,eval(expr2)))
system.time(replicate(1000,eval(expr3)))
system.time(replicate(1000,eval(expr4)))
system.time(replicate(1000,eval(expr5)))
system.time(replicate(1000,eval(expr6)))
system.time(replicate(1000,mean(DT$pwgtp15,by=DT$SEX)))
system.time(replicate(1000,rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]))
system.time(replicate(1000,rowMeans(DT)[DT$SEX==1]))
system.time(replicate(1000,DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(1000,DT[DT$SEX==1,]$pwgtp15))
system.time(replicate(100,DT[DT$SEX==1,]$pwgtp15))
system.time(replicate(1000,sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(1000,tapply(DT$pwgtp15,DT$SEX,mean)))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
setwd("~/Coursera/ExData/ExData_Plotting1")
source('~/Coursera/ExData/ExData_Plotting1/load.R')
if (!file.exists("data")) {dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
datafileName <- "household_power_consumption.txt"
data <- read.table(unz(fileUrl, datafileName), nrows=10, header=T, na.strings = "?", sep=";")
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipfileName <-""./data/proj1.zip""
datafileName <- "household_power_consumption.txt"
download.file(fileUrl, destfile = zipfileName, method = "curl")
zipfileName <-"./data/proj1.zip"
download.file(fileUrl, destfile = zipfileName, method = "curl")
data <- read.table(unz(zipfileName, datafileName), nrows=10, header=T, na.strings = "?", sep=";")
data
str(data)
source('~/Coursera/ExData/ExData_Plotting1/load.R')
load()
subSetData <- data[data$Date == "1/2/2007" | data$Date == "2/2/2007"]
subSetData
dates2eval <- c("1/2/2007","2/2/2007")
subSetData <- data[data$Date %in% dates2eval]
dates2eval <- c("1/2/2007","2/2/2007","16/12/2007") #date format is character 'd/m/yyyy'
subSetData <- data[data$Date %in% dates2eval]
subSetData
dates2eval <- c("1/2/2007","2/2/2007","16/12/2007") #date format is character 'd/m/yyyy'
subSetData <- data[data$Date %in% dates2eval,]
subSetData
dates2eval <- c("1/2/2007","2/2/2007","16/12/2006") #date format is character 'd/m/yyyy'
subSetData <- data[data$Date %in% dates2eval,]
subSetData
data <- read.table(unz(zipfileName, datafileName),
nrows=5, header=T, na.strings = "?", sep=";")
classes <- sapply(data, class)
data <- read.table(unz(zipfileName, datafileName),
nrows=5, header=T, na.strings = "?", sep=";",
colClasses = classes)
classes
str(classes)
data
wc zipfileName
N<-2075259 # number of rows (from class assignment)
skipRows <-1000000 #adjust this to find date of interest
nRows2Read <- 5 ## later use N - StartRow
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-1000000
skipRows <-100000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-90000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-80000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-70000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-50000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-60000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
skipRows <-65000
data <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
data
source('~/Coursera/ExData/ExData_Plotting1/load.R')
load()
str(data)
source('~/Coursera/ExData/ExData_Plotting1/load.R')
nRows2Read <- (70000 - 65000)
source('~/Coursera/ExData/ExData_Plotting1/load.R')
load()
str(data)
source('~/Coursera/ExData/ExData_Plotting1/load.R')
subSetData <- data[data$Date %in% dates2eval,]
data[1:5,]
data[1000:1005,]
data[2000:2005,]
length(data[data$Date == "1/2/2007"])
data[2000,"Date"]
str(data)
data.class()
ileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipfileName <-"./data/proj1.zip"
datafileName <- "household_power_consumption.txt"
download.file(fileUrl, destfile = zipfileName, method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipfileName <-"./data/proj1.zip"
datafileName <- "household_power_consumption.txt"
download.file(fileUrl, destfile = zipfileName, method = "curl")
dat <- read.table(unz(zipfileName, datafileName),
nrows=5, header=T, na.strings = "?", sep=";")
colnames(dat)
dat.col.names <- sapply(dat, colnames)
dat.col.names
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
skipRows <-65000
nRows2Read <- (70000 - 65000)
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
classes <- sapply(dat, class)
dat.col.names <- sapply(dat, colnames)
#I adjusted read.table skip to find approx. start and end of data of interest
##100,000 is 24/2/2007
##70,000 is 3/2/2007 end here
##60,000 is 27/1/2007
##65,000 is 30/1/2007 start here
skipRows <-65000
nRows2Read <- (70000 - 65000)
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T, na.strings = "?", sep=";",
colClasses = classes)
class(dat)
dat3 <- rbind(dat,dat2)
colnames(dat2)  <- dat.col.names
str(dat2)
str(dat)
dat.col.names
names(dat2)<-dat.col.names
str(dat2)
names(dat2)<-names(dat)
str(dat2)
##65,000 is 30/1/2007 start here
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipfileName <-"./data/proj1.zip"
datafileName <- "household_power_consumption.txt"
download.file(fileUrl, destfile = zipfileName, method = "curl")
##read in 5 rows and get colClasses to speed full upload
## could have used colClasses = c("character", "character", rep("numeric",7)))
dat <- read.table(unz(zipfileName, datafileName),
nrows=5, header=T, na.strings = "?", sep=";")
classes <- sapply(dat, class)
dat.col.names <- sapply(dat, colnames)
#I adjusted read.table skip to find approx. start and end of data of interest
##100,000 is 24/2/2007
##70,000 is 3/2/2007 end here
##60,000 is 27/1/2007
##65,000 is 30/1/2007 start here
skipRows <-65000
nRows2Read <- (70000 - 65000)
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T,
na.strings = "?", sep=";",
col.names = dat.col.names,
colClasses = classes)
str(dat2)
classes
names(classes)
names(dat2)<-names(classes)
str(dat2)
setwd("~/Coursera/ExData/ExData_Plotting1")
if (!file.exists("data")) {dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipfileName <-"./data/proj1.zip"
datafileName <- "household_power_consumption.txt"
download.file(fileUrl, destfile = zipfileName, method = "curl")
##read in 5 rows and get colClasses to speed full upload
## could have used colClasses = c("character", "character", rep("numeric",7)))
dat <- read.table(unz(zipfileName, datafileName),
nrows=5, header=T, na.strings = "?", sep=";")
classes <- sapply(dat, class)
#I adjusted read.table skip to find approx. start and end of data of interest
##100,000 is 24/2/2007
##70,000 is 3/2/2007 end here
##60,000 is 27/1/2007
##65,000 is 30/1/2007 start here
skipRows <-65000
nRows2Read <- (70000 - 65000)
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=T,
na.strings = "?", sep=";",
col.names = names(classes),
colClasses = classes)
str(dat2)
dat2 <- read.table(unz(zipfileName, datafileName),
nrows=nRows2Read, skip = skipRows, header=F,
na.strings = "?", sep=";",
col.names = names(classes),
colClasses = classes)
str(dat2)
dates2eval <- c("1/2/2007","2/2/2007")
subSetData <- dat2[dat2$Date %in% dates2eval,]
str(subSetData)
subsetData <- dat2[dat2$Date %in% dates2eval,]
head(subsetData)
tail(subsetData)
temp <- paste(susbsetDate$Date,subsetData$Time)
temp <- paste(susbsetData$Date,subsetData$Time)
temp <- paste(subsetData$Date,subsetData$Time)
temp[1]
temp[1:5]
subsetData$DateTime <- strptime(temp,"%d/%m/%Y %H:%M:%S")
subsetData$DateTime[1:5]
str(subsetData)
source('~/Coursera/ExData/ExData_Plotting1/load.R', echo=TRUE)
temp <- paste(tidy$Date,tidy$Time)
tidy$DateTime <- strptime(temp,"%d/%m/%Y %H:%M:%S")
str(tidy)
setwd("~/Coursera/ExData/ExData_Plotting1")
source("load.R")
png(filename = "plot1.png",
width = 480, height = 480, units = "px",
bg = "transparent")
hist(tidy$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
col = "red")
dev.off()
source('~/Coursera/ExData/ExData_Plotting1/plot1.R', echo=TRUE)
png(filename = "plot2.png",
width = 480, height = 480, units = "px",
bg = "transparent")
plot(tidy$DateTime, tidy$Global_active_power,
type = "l",
ylab = "Global Active Power (kilowatts)",
col = "red")
dev.off()
png(filename = "plot2.png",
width = 480, height = 480, units = "px",
bg = "transparent")
plot(tidy$DateTime, tidy$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
dev.off()
str(tidy)
png(filename = "plot3.png",
width = 480, height = 480, units = "px",
bg = "transparent")
plot(tidy$DateTime, tidy$Sub_metering_1,
type = "l",
col = "black",
xlab = "",
ylab = "Energy sub metering")
lines(tidy$DateTime, tidy$Sub_metering_2, col="red")
lines(tidy$DateTime, tidy$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red", "blue"), lty=1)
dev.off()
png(filename = "plot4.png",
width = 480, height = 480, units = "px",
bg = "transparent")
par(mfrow = c(2,2)) #by rows, so top-left, top-right, bottom-left, bottom-right
## Top-left (same as plot2 without units in ylab)
plot(tidy$DateTime, tidy$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
## Top-right
plot(tidy$DateTime, tidy$Voltage, type="l",
xlab="datetime", ylab="Voltage")
## Bottom-left (same as plot3, with no legend border)
plot(tidy$DateTime, tidy$Sub_metering_1,
type = "l",
col = "black",
xlab = "",
ylab = "Energy sub metering")
lines(tidy$DateTime, tidy$Sub_metering_2, col="red")
lines(tidy$DateTime, tidy$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red", "blue"), lty=1,
bty = "n")
## Bottom-right
plot(tidy$DateTime, tidy$Global_reactive_power,
type = "l",
col = "black")
dev.off()
png(filename = "plot4.png",
width = 480, height = 480, units = "px",
bg = "transparent")
par(mfrow = c(2,2)) #by rows, so top-left, top-right, bottom-left, bottom-right
## Top-left (same as plot2 without units in ylab)
plot(tidy$DateTime, tidy$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power")
## Top-right
plot(tidy$DateTime, tidy$Voltage, type="l",
xlab="datetime", ylab="Voltage")
## Bottom-left (same as plot3, with no legend border)
plot(tidy$DateTime, tidy$Sub_metering_1,
type = "l",
col = "black",
xlab = "",
ylab = "Energy sub metering")
lines(tidy$DateTime, tidy$Sub_metering_2, col="red")
lines(tidy$DateTime, tidy$Sub_metering_3, col="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col = c("black", "red", "blue"), lty=1,
bty = "n")
## Bottom-right
plot(tidy$DateTime, tidy$Global_reactive_power,
type = "l",
col = "black",
xlab = "datetime",
ylab = "Global_reactive_power")
dev.off()
source('~/Coursera/ExData/ExData_Plotting1/plot4.R', echo=TRUE)
